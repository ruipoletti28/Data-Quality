Data Quality é o termo utilizado para descrever a qualidade dos dados em uma organização, refere-se à medida em que os dados são precisos, completos, confiáveis, consistentes e adequados para os propósitos desejados. A análise e a garantia dos dados é um processo crítico para qualquer organização que se baseie em dados para suas operações e tomadas de decisão. A falta de qualidade nos dados pode levar a prejuízos financeiros, perda de oportunidades de negócios e danos à reputação da empresa. A avaliação da qualidade dos dados é uma tarefa complexa, que envolve diversas etapas, como a identificação de fontes de dados, a coleta de dados, a limpeza de dados, a integração de dados e a análise dos dados. Cada uma dessas etapas pode apresentar desafios e requer ferramentas e técnicas específicas para garantir a qualidade dos dados. Nesse contexto, a utilização de ferramentas automatizadas que possam realizar tarefas de limpeza, transformação e garantia da qualidade dos dados é essencial.

O presente trabalho tem como objetivo desenvolver um sistema de \textit{Data Quality} em Python que possa realizar essas tarefas. O sistema proposto é capaz de ler dados de planilhas em diversos formatos, tais como .csv, .xlsx, .xls, entre outros. A partir desses dados, é realizada uma análise de qualidade e integridade, buscando-se identificar e corrigir possíveis erros, inconsistências e duplicações. Além disso, o sistema também é capaz de realizar transformações nos dados, permitindo, por exemplo, a conversão de dados de texto em dados numéricos. Para garantir a segurança dos dados, o sistema conta com recursos de criptografia. 

Será possível gerar um token usando a biblioteca JWT em Python que contém informações criptografadas sobre a planilha de dados transformada, os dados são armazenados em uma nova planilha e é enviado a chave de criptografia através de um e-mail seguro para o destinatário. Ao receber o token, o destinatário poderia decodificar as informações do payload e acessar a planilha de dados transformada de forma segura.

O desenvolvimento do sistema é realizado com HTML, CSS e JavaScript no front-end e o Python no back-end, utilizando bibliotecas como Pandas e Numpy, usando como banco de dados local o SQLite3. Além disso, é utilizado um ambiente virtual para garantir a integridade das dependências do projeto. O presente trabalho apresenta uma descrição detalhada da arquitetura do sistema proposto, bem como dos algoritmos e técnicas utilizadas para a realização das tarefas de limpeza, transformação e garantia da qualidade dos dados. O uso do JavaScript para ler os dados da planilha e enviar ao SQLite3 será devido à falta de integração entre Python e JavaScript. Também são apresentados os resultados da implementação do sistema em um estudo de caso real, demonstrando a sua eficácia na garantia da qualidade dos dados.